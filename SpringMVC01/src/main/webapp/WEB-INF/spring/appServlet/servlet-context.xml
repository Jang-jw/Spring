<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 
		css, js, img 등 resource 파일에 접근하기 위한 설정
		http://localhost:8088/myapp/resources/img/현진.png
		이런 resource 에 접근하는 요청을 허락하기 위한 설정  
	 -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 
		ViewResolver 생성
		new InternalResourceViewResolver();
		
		return "home"; >> viewResolver >> prefix + "home" + suffix
			=> /WEB-INF/views/home.jsp
			- JSP 로 이동하는 경로를 완전하게 만들어주는 역할 
	 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		중요도 10+
		component-scan : 특정한 객체들을 찾기 위해서 base-package 를 스캔
			- POJO 를 찾기 위한 scan
			- POJO Class 에 붙어있는 어노테이션을 찾음 
			- base-package 가 POJO 가 들어있는 패키지여야만 함 
			
		URLMapping <> method 를 연결해서 가지고 있을 객체를 생성 
		"/home" <> BoardController.home() 이렇게 짝지어서 가지고 있게 됨 
	-->
	<context:component-scan base-package="com.smhrd.myapp" /> 
	
	
	
</beans:beans>
